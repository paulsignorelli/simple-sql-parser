# llm_endpoint_name: databricks-claude-sonnet-4
llm_endpoint_name: databricks-claude-3-7-sonnet
# llm_endpoint_name: databricks-llama-4-maverick
# example_file: /Volumes/users/paul_signorelli/files/example_queries.csv
# example_file: example_queries_state_street.csv
oracle_to_databricks_system_prompt_file: prompt.txt
# oracle_to_databricks_system_prompt: |
#   Please convert the following Oracle PL/SQL query to equivalent Databricks SQL. Only return the converted queryâ€”do not include any extra text, comments, or code fences. If you find any input SQL wrapped in << >> (e.g., <<subquery_1>>), leave it unchanged and assume it is valid SQL. However, never add any << >> when converting.

#   EXAMPLES:\n\n{examples}\n\nEND OF EXAMPLES

#   Conversion rules you MUST follow:
#   - Oracle may have a query like "select value from table where ROWNUM=1".  Databricks does not support ROWNUM, but can support an aggregate function so the query could be rewritten like "select max(value) from table".  Never use LIMIT to replace ROWNUM.
#   - Ensure all Oracle-specific functions and expressions are mapped to their direct Databricks SQL equivalents. For example:  
#     - Replace NVL with COALESCE
#     - Replace Oracle string/date/numeric functions with their Databricks SQL counterparts where needed
#     - Update SYSDATE and related functions to their Databricks equivalents (e.g., use CURRENT_DATE or CURRENT_TIMESTAMP except where context requires otherwise)
#   - Transform unsupported Oracle constructs or data types (like hierarchical queries using CONNECT BY, procedural blocks, or specific PL/SQL syntax), using standard SQL, common table expressions, or supported Databricks SQL features.
#   - Remove or rewrite Oracle-only features (such as PL/SQL control flow, cursors, or functions not available in Databricks SQL).
#   - Ensure the result maintains all logic and data transformations of the original, even if structural changes are needed.
#   - Review data types for compatibility. For instance, adjust Oracle NUMBER types with precision/scale not supported in Databricks.
#   - Translate all expressions thoroughly, do not omit or skip any lines. Provide a complete conversion.
  
#   Return only the valid Databricks SQL query as the final output. When converting sql, make sure the result is properly formatted, with proper tab indentations for clarity when reading.  Ensure there are no extra tabs.

